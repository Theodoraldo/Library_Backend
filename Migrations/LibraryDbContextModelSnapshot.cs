// <auto-generated />
using System;
using LibraryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryAPI.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryAPI.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryAPI.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a09d9cc1-232c-48e9-948c-964da7117fc6"),
                            Description = "Literary Fiction, Historical Fiction, Science Fiction (Sci-Fi), Fantasy, Mystery, Thriller, Horror, Romance",
                            GenreName = "Fiction"
                        },
                        new
                        {
                            Id = new Guid("014d1df3-20dc-458f-b28d-ba0173589bdd"),
                            Description = "Biography/Autobiography, Memoir, Essay, Self-Help, Psychology, Philosophy, History, Travel, Science, True Crime",
                            GenreName = "Non-Fiction"
                        },
                        new
                        {
                            Id = new Guid("bc28c8df-7712-4bd5-b853-677cd1935e19"),
                            Description = "Narrative Poetry, Lyric Poetry, Haiku",
                            GenreName = "Poetry"
                        },
                        new
                        {
                            Id = new Guid("43ed1b6f-3302-461d-83de-fead21f4a0e7"),
                            Description = "Picture Books, Middle Grade, Young Adult (YA)",
                            GenreName = "Children's and Young Adult"
                        },
                        new
                        {
                            Id = new Guid("4efe5535-2abb-4893-8c36-0bc57cf942a1"),
                            Description = "Tragedy, Comedy, Historical Drama",
                            GenreName = "Drama/Play"
                        },
                        new
                        {
                            Id = new Guid("36d9542c-bcf5-4f6f-8dde-0694ced0b3ac"),
                            Description = "Detective Fiction, Crime Thriller, Psychological Thriller",
                            GenreName = "Mystery/Thriller"
                        },
                        new
                        {
                            Id = new Guid("9fc70fd2-a1db-4a40-b93b-277eace71134"),
                            Description = " Space Opera, Cyberpunk, Hard Science Fiction",
                            GenreName = "Science Fiction (Sci-Fi)"
                        },
                        new
                        {
                            Id = new Guid("e24ca860-a6c8-4d8f-80ed-d2e7e61ea8c3"),
                            Description = "High Fantasy, Urban Fantasy, Magical Realism",
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("9f521989-f72c-4df1-aca0-f58e0a37d92e"),
                            Description = "Contemporary Romance, Historical Romance, Paranormal Romance",
                            GenreName = "Romance"
                        },
                        new
                        {
                            Id = new Guid("fb51f473-671d-479b-889b-93a8b6871b32"),
                            Description = "Supernatural Horror, Psychological Horror, Gothic Horror",
                            GenreName = "Horror"
                        },
                        new
                        {
                            Id = new Guid("d675c50d-710f-465c-9a7d-a800724a7b7e"),
                            Description = "Ancient History, Medieval, Renaissance",
                            GenreName = "Historical Fiction"
                        },
                        new
                        {
                            Id = new Guid("eac18a33-6d88-41ea-b38a-a001ab796788"),
                            Description = "Action-Adventure, Historical Adventure",
                            GenreName = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("ef5deff5-4634-414e-bd2e-c0b25771befb"),
                            Description = "Satirical Fiction, Comic Fiction",
                            GenreName = "Satire/Humor"
                        },
                        new
                        {
                            Id = new Guid("e4eba526-a416-484b-927b-e54d4d0297c2"),
                            Description = "Superhero Comics, Graphic Memoirs",
                            GenreName = "Graphic Novels/Comics"
                        },
                        new
                        {
                            Id = new Guid("c75cd925-dba9-4b77-b766-d70856488a69"),
                            Description = "Shonen, Shojo, Seinen, Josei",
                            GenreName = "Manga"
                        },
                        new
                        {
                            Id = new Guid("abbc9a56-12d0-4b24-93a3-042469814011"),
                            Description = "Classic Literature",
                            GenreName = "Classics"
                        },
                        new
                        {
                            Id = new Guid("205fa5e8-1a9f-4bd4-8f8a-93e5b43e0a96"),
                            Description = "Religious Texts, Spiritual Guidance",
                            GenreName = "Religious/Spiritual"
                        },
                        new
                        {
                            Id = new Guid("378998f8-3ff1-472e-b3bf-e47f147dde37"),
                            Description = "Business Books, Finance and Investing",
                            GenreName = "Business/Finance"
                        },
                        new
                        {
                            Id = new Guid("fac5b0f3-4d0f-458d-9c87-4cd1a5a8efa2"),
                            Description = "Culinary Non-Fiction",
                            GenreName = "Cookbooks"
                        },
                        new
                        {
                            Id = new Guid("bbe8d0b2-28ff-4501-8e20-7eb8834fd3b5"),
                            Description = "Popular Science, Natural History",
                            GenreName = "Science/Nature"
                        });
                });

            modelBuilder.Entity("LibraryAPI.Models.Book", b =>
                {
                    b.HasOne("LibraryAPI.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
