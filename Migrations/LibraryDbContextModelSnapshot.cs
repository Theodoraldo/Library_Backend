// <auto-generated />
using System;
using LibraryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryAPI.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryAPI.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryAPI.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f508e631-4fba-4fcf-a692-b4f24f7f7501"),
                            Description = "Literary Fiction, Historical Fiction, Science Fiction (Sci-Fi), Fantasy, Mystery, Thriller, Horror, Romance",
                            GenreName = "Fiction"
                        },
                        new
                        {
                            Id = new Guid("95fe605b-b9ff-423c-a5c5-2295bdc6f273"),
                            Description = "Biography/Autobiography, Memoir, Essay, Self-Help, Psychology, Philosophy, History, Travel, Science, True Crime",
                            GenreName = "Non-Fiction"
                        },
                        new
                        {
                            Id = new Guid("39864c08-7681-4c74-a59d-a517faf87c6f"),
                            Description = "Narrative Poetry, Lyric Poetry, Haiku",
                            GenreName = "Poetry"
                        },
                        new
                        {
                            Id = new Guid("70f0c7a5-50a3-4d71-a174-b537ebd735e1"),
                            Description = "Picture Books, Middle Grade, Young Adult (YA)",
                            GenreName = "Children's and Young Adult"
                        },
                        new
                        {
                            Id = new Guid("a7abb3d3-0e84-4f5d-be13-655b380ed4de"),
                            Description = "Tragedy, Comedy, Historical Drama",
                            GenreName = "Drama/Play"
                        },
                        new
                        {
                            Id = new Guid("14bee1af-b87a-4341-9205-42a94a259cd6"),
                            Description = "Detective Fiction, Crime Thriller, Psychological Thriller",
                            GenreName = "Mystery/Thriller"
                        },
                        new
                        {
                            Id = new Guid("ccddecc6-8ae0-4f9c-b02d-b91d6c66b1d5"),
                            Description = " Space Opera, Cyberpunk, Hard Science Fiction",
                            GenreName = "Science Fiction (Sci-Fi)"
                        },
                        new
                        {
                            Id = new Guid("0efdc430-9ade-4acc-bd27-c8e7af04ae9f"),
                            Description = "High Fantasy, Urban Fantasy, Magical Realism",
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("9754919f-d353-48e3-a6c7-afa74f593efe"),
                            Description = "Contemporary Romance, Historical Romance, Paranormal Romance",
                            GenreName = "Romance"
                        },
                        new
                        {
                            Id = new Guid("1f965828-2a65-4a07-81a1-466da2edc149"),
                            Description = "Supernatural Horror, Psychological Horror, Gothic Horror",
                            GenreName = "Horror"
                        },
                        new
                        {
                            Id = new Guid("58c3c2ca-52ff-4800-9863-6e18ffca08ad"),
                            Description = "Ancient History, Medieval, Renaissance",
                            GenreName = "Historical Fiction"
                        },
                        new
                        {
                            Id = new Guid("9bd39c76-e93b-4559-b7f8-be1363f9bb99"),
                            Description = "Action-Adventure, Historical Adventure",
                            GenreName = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("d0a0a511-55f2-4e57-97e9-78d3287477b9"),
                            Description = "Satirical Fiction, Comic Fiction",
                            GenreName = "Satire/Humor"
                        },
                        new
                        {
                            Id = new Guid("774c2ec7-0e29-436c-9145-7c6a4c6e599b"),
                            Description = "Superhero Comics, Graphic Memoirs",
                            GenreName = "Graphic Novels/Comics"
                        },
                        new
                        {
                            Id = new Guid("d9954084-dd29-447c-8b02-67881119be16"),
                            Description = "Shonen, Shojo, Seinen, Josei",
                            GenreName = "Manga"
                        },
                        new
                        {
                            Id = new Guid("b637cb7e-60de-469b-827e-c146427eba80"),
                            Description = "Classic Literature",
                            GenreName = "Classics"
                        },
                        new
                        {
                            Id = new Guid("058ea66b-4c28-484b-afc2-3adbf84d4592"),
                            Description = "Religious Texts, Spiritual Guidance",
                            GenreName = "Religious/Spiritual"
                        },
                        new
                        {
                            Id = new Guid("3788fe52-5805-4f69-b31e-1ea4c86a13be"),
                            Description = "Business Books, Finance and Investing",
                            GenreName = "Business/Finance"
                        },
                        new
                        {
                            Id = new Guid("b36fa65b-5610-4f39-848a-4d3b48096ee1"),
                            Description = "Culinary Non-Fiction",
                            GenreName = "Cookbooks"
                        },
                        new
                        {
                            Id = new Guid("2e00bc0c-6147-40dd-bb5c-b157ba796cb3"),
                            Description = "Popular Science, Natural History",
                            GenreName = "Science/Nature"
                        });
                });

            modelBuilder.Entity("LibraryAPI.Models.Book", b =>
                {
                    b.HasOne("LibraryAPI.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
